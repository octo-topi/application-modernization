@startmindmap

caption Draft
title Application modernization

+[#Orange] Modernization
-- System thinking
---_ Website : [[https://web.archive.org/web/20230923142459/https://www.systems-thinking.org/theWay/theWay.htm Systems thinking]]
---_ Book : [[https://verraes.net/2013/08/john-gall-systemantics-the-systems-bible/ Systems Bible]]
-- Problems
--- Obsolescence
----_ Unmaintained technologies
----_ Unsupported technologies
----_ Rarefaction of skilled developers
--- Legacy
' il nous faudrait au moins un article qui vient de nous, à rediscuter ensemble (ça peut m'intéresser)
---- Défier l’entropie : Refaire ou remettre sous contrôle ?
-----_ ALJE [[https://blog.octo.com/la-duck-conf-2024-defier-l'entropie--refaire-ou-remettre-sous-controle blog post]]
---- All brownfields are not legacies
-----_ BONO [[https://blog.octo.com/le-brownfield-n'est-pas-du-code-legacy blog post]]
---- Comment l’IA générative peut-elle moderniser efficacement vos SI Brownfield ?
-----_ KLEI [[https://blog.octo.com/compte-rendu-le-comptoir-octo-comment-l'ia-generative-peut-elle-moderniser-efficacement-vos-si-brownfield blog post]]
---- Causes
----- Endemic Technical debt
------ Accidental complexity
------ Conflicting heuristics 
-------_ Wrong choices in the initial context
-------_ Context has changed but no remediation
-------_ CTH [[https://blog.octo.com/en-finir-avec-la-dette-technique blog post]]
------ Strategic is not a problem
-----_ Core business and complexity
-----_ Long-lived codebase => Huge codebase
-----_ No automated tests (Feathers)
---- Symptoms = change is painful
-----_ High TTM
-----_ High default rate
++ Solutions
+++ Scope
++++_ On essential complexity
++++_ On core business
+++ Practices
++++ Remodularization
++++ Application design
+++++ Tactical DDD
+++++ Hexagonal architecture
+++++ Clean architecture
++++ Development practices \n (to fix legacy)
+++++_ Automated tests
+++++_ TDD
+++++_ Refactoring
+++++ Change patterns
++++++ Strangler
++++++ Seam Model 
+++++++_ Book: [[https://understandlegacycode.com/blog/key-points-of-working-effectively-with-legacy-code/ Working effectively with legacy]] 
++++++_ Nick Tune: [[https://legacy-modernization.io/patterns/ Patterns]]
++++++ Characterization test
+++ System organization
++++ Intervention points
+++++_ Application (code)
+++++_ Team
+++++_ IT Department
+++++_ Business
++++ Take strategic decisions
+++++_ Move to off-the-shelf solution
+++++_ Outsource
+++++_ Buy a specialized company
+++++_ Do in-house
+++++ Tactical DDD
++++ Improve process and workflow
+++++_ Book: [[ https://itrevolution.com/product/accelerate/ Accelerate ]]
+++++_ Book: [[ https://teamtopologies.com/ Teams topologies]]
++ Our services
+++ Audit & DueDil
+++ Request for proposal (AO)
+++ Consulting
++++ Advice on strategic decisions
++++ Event storming
+++++_ Coaching
+++ Training
++++_ [[ https://www.octo.academy/catalogue/formation/tdd02-test-driven-development-sur-du-code-legacy/ Legacy - TDD02]]
++++_ [[ https://www.octo.academy/catalogue/formation/ddd01-ddd-domain-driven-design/ Legacy - DDD01]]
++++_ [[ https://www.octo.academy/catalogue/formation/techl-pratiques-de-tech-leading-en-contexte-agile/ Legacy - TECHL]]
+++ Delivery
++++ Coaching
++++ Technical Leading
++++ Development
++++ OPS
@endmindmap


